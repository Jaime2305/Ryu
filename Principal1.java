

import java.util.ArrayList;
import java.util.Collections;

import Extra.Binario;
import Extra.Generador;


public class Principal1 {
    public static void main(String[] args) {
      Binario iniciar=new Binario();
      Generador Elegir=new Generador();

      ArrayList<Integer> a=new ArrayList<>();
      ArrayList<Integer> b=new ArrayList<>();
      
      Collections.addAll(b, 0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 
      89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 125, 126, 128, 128, 129, 130, 130, 131, 132, 132, 132, 133, 133, 134, 138, 140, 140, 140, 141, 141, 141, 142, 143, 143, 146, 146, 147, 147, 147, 148, 148, 149, 149, 150, 150, 151, 151, 153, 154, 155, 157, 160, 161, 161, 162, 162, 164, 164, 165, 165, 168, 170, 170, 173, 173, 
      173, 173, 175, 176, 178, 179, 179, 184, 185, 185, 186, 188, 190, 191, 193, 193, 194, 194, 197, 197, 200, 201, 201, 202, 203, 204, 204, 206, 206, 207, 208, 209, 211, 212, 212, 212, 213, 213, 213, 216, 216, 219, 220, 221, 222, 223, 223, 225, 225, 226, 227, 227, 227, 228, 229, 230, 231, 231, 234, 234, 235, 235, 236, 236, 237, 238, 241, 241, 242, 243, 243, 243, 244, 244, 245, 247, 249, 253, 255, 256, 257, 259, 259, 259, 259, 259, 259, 261, 261, 261, 261, 262, 262, 263, 264, 265, 266, 267, 269, 271, 271, 273, 274, 274, 274, 275, 275, 275, 277, 279, 279, 280, 280, 281, 282, 283, 285, 287, 288, 289, 291, 291, 295, 295, 295, 296, 296, 297, 298, 
      299, 299, 299, 302, 303, 303, 304, 305, 307, 309, 311, 312, 314, 314, 316, 319, 320, 320, 321, 321, 322, 322, 324, 325, 326, 327, 327, 328, 328, 328, 330, 330, 333, 334, 334, 334, 337, 338, 338, 339, 341, 342, 343, 344, 344, 345, 345, 346, 346, 347, 347, 348, 353, 353, 353, 354, 355, 355, 356, 356, 356, 360, 362, 363, 364, 364, 365, 365, 366, 366, 367, 368, 368, 369, 370, 370, 371, 372, 375, 375, 380, 380, 380, 385, 386, 386, 386, 387, 389, 394, 396, 397, 397, 399, 402, 404, 406, 406, 406, 407, 407, 409, 409, 413, 414, 415, 415, 416, 417, 419, 419, 419, 421, 423, 426, 428, 429, 429, 430, 431, 431, 434, 434, 436, 437, 437, 438, 439, 440, 
      442, 442, 442, 443, 444, 444, 445, 445, 448, 452, 452, 453, 456, 459, 460, 461, 461, 461, 462, 462, 463, 463, 464, 464, 465, 465, 469, 471, 472, 473, 474, 474, 476, 477, 477, 478, 480, 480, 484, 484, 484, 484, 485, 486, 486, 486, 489, 491, 491, 493, 494, 495, 496, 496, 496, 498, 500, 501, 501, 502, 502, 503, 505, 505, 505, 506, 506, 507, 507, 509, 510, 512, 513, 515, 517, 519, 519, 519, 520, 521, 521, 521, 522, 522, 523, 523, 524, 525, 527, 527, 528, 529, 529, 529, 530, 532, 533, 536, 536, 537, 537, 539, 539, 539, 540, 541, 543, 543, 545, 546, 547, 548, 548, 550, 550, 552, 554, 556, 557, 557, 557, 560, 560, 561, 562, 563, 563, 563, 563, 
      563,1000);

      double ti=System.currentTimeMillis();
      int i,j=100000; //cantidad de numeros a generar
     
      for(i=0;i<=j;i++){
        Elegir.Aleatorio(j);      //anadir cada valor generado aleatorio a la lista dinamica
        int n=Elegir.NumAl();
        a.add(n);
      }

      Collections.sort(a); //ordena los valores de la lista
      int idi=0;
      int idf=1;

      for(i=0;i<=j-1;i++){ //borrador de numeros repetidos en la lista
        if(a.get(idi)==a.get(idf)){
          a.remove(idf);
        }else{
          idi=idf;
          idf=idf+1;
        }
      }

      
      double tf=System.currentTimeMillis();

      double t=(tf-ti)/1000;
 
      System.out.println(Binario.AZUL+"Tamano lista es: "+Binario.RESET+a.size()+"\nTiempo generacion lista: "+t+" s");
      
      iniciar.Bbinaria(1000, b);
    }
}
